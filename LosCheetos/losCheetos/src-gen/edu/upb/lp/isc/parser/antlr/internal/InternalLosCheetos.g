/*
 * generated by Xtext 2.11.0
 */
grammar InternalLosCheetos;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package edu.upb.lp.isc.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package edu.upb.lp.isc.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import edu.upb.lp.isc.services.LosCheetosGrammarAccess;

}

@parser::members {

 	private LosCheetosGrammarAccess grammarAccess;

    public InternalLosCheetosParser(TokenStream input, LosCheetosGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "MyRacketProgram";
   	}

   	@Override
   	protected LosCheetosGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleMyRacketProgram
entryRuleMyRacketProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMyRacketProgramRule()); }
	iv_ruleMyRacketProgram=ruleMyRacketProgram
	{ $current=$iv_ruleMyRacketProgram.current; }
	EOF;

// Rule MyRacketProgram
ruleMyRacketProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='Definitions'
			{
				newLeafNode(otherlv_0, grammarAccess.getMyRacketProgramAccess().getDefinitionsKeyword_0_0());
			}
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getMyRacketProgramAccess().getColonKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMyRacketProgramAccess().getDefinesDefineParserRuleCall_0_2_0());
					}
					lv_defines_2_0=ruleDefine
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMyRacketProgramRule());
						}
						add(
							$current,
							"defines",
							lv_defines_2_0,
							"edu.upb.lp.isc.LosCheetos.Define");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		otherlv_3='Executions'
		{
			newLeafNode(otherlv_3, grammarAccess.getMyRacketProgramAccess().getExecutionsKeyword_1());
		}
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getMyRacketProgramAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMyRacketProgramAccess().getExecutionsExpressionParserRuleCall_3_0());
				}
				lv_executions_5_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMyRacketProgramRule());
					}
					add(
						$current,
						"executions",
						lv_executions_5_0,
						"edu.upb.lp.isc.LosCheetos.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleDefine
entryRuleDefine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefineRule()); }
	iv_ruleDefine=ruleDefine
	{ $current=$iv_ruleDefine.current; }
	EOF;

// Rule Define
ruleDefine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getDefineAccess().getLeftParenthesisKeyword_0());
		}
		otherlv_1='define'
		{
			newLeafNode(otherlv_1, grammarAccess.getDefineAccess().getDefineKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getDefineAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getDefineAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefineRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_params_4_0=RULE_ID
				{
					newLeafNode(lv_params_4_0, grammarAccess.getDefineAccess().getParamsIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefineRule());
					}
					addWithLastConsumed(
						$current,
						"params",
						lv_params_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getDefineAccess().getRightParenthesisKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefineAccess().getBodyExpressionParserRuleCall_6_0());
				}
				lv_body_6_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefineRule());
					}
					add(
						$current,
						"body",
						lv_body_6_0,
						"edu.upb.lp.isc.LosCheetos.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getDefineAccess().getRightParenthesisKeyword_7());
		}
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getSimpleExpressionParserRuleCall_0());
		}
		this_SimpleExpression_0=ruleSimpleExpression
		{
			$current = $this_SimpleExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getNumberExpressionParserRuleCall_1());
		}
		this_NumberExpression_1=ruleNumberExpression
		{
			$current = $this_NumberExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getIfExpressionParserRuleCall_2());
		}
		this_IfExpression_2=ruleIfExpression
		{
			$current = $this_IfExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getFunctionCallExpressionParserRuleCall_3());
		}
		this_FunctionCallExpression_3=ruleFunctionCallExpression
		{
			$current = $this_FunctionCallExpression_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getWhileExpressionParserRuleCall_4());
		}
		this_WhileExpression_4=ruleWhileExpression
		{
			$current = $this_WhileExpression_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getParamCallExpressionParserRuleCall_5());
		}
		this_ParamCallExpression_5=ruleParamCallExpression
		{
			$current = $this_ParamCallExpression_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSimpleExpression
entryRuleSimpleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleExpressionRule()); }
	iv_ruleSimpleExpression=ruleSimpleExpression
	{ $current=$iv_ruleSimpleExpression.current; }
	EOF;

// Rule SimpleExpression
ruleSimpleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSimpleExpressionAccess().getBoolExpressionParserRuleCall_0());
		}
		this_BoolExpression_0=ruleBoolExpression
		{
			$current = $this_BoolExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleExpressionAccess().getStrExpressionParserRuleCall_1());
		}
		this_StrExpression_1=ruleStrExpression
		{
			$current = $this_StrExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleExpressionAccess().getListExpressionParserRuleCall_2());
		}
		this_ListExpression_2=ruleListExpression
		{
			$current = $this_ListExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleExpressionAccess().getPrintExpressionParserRuleCall_3());
		}
		this_PrintExpression_3=rulePrintExpression
		{
			$current = $this_PrintExpression_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleExpressionAccess().getListOpExpressionParserRuleCall_4());
		}
		this_ListOpExpression_4=ruleListOpExpression
		{
			$current = $this_ListOpExpression_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSimpleExpressionAccess().getStrOpExpressionParserRuleCall_5());
		}
		this_StrOpExpression_5=ruleStrOpExpression
		{
			$current = $this_StrOpExpression_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNumberExpression
entryRuleNumberExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberExpressionRule()); }
	iv_ruleNumberExpression=ruleNumberExpression
	{ $current=$iv_ruleNumberExpression.current; }
	EOF;

// Rule NumberExpression
ruleNumberExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNumberExpressionAccess().getIntExpressionParserRuleCall_0());
		}
		this_IntExpression_0=ruleIntExpression
		{
			$current = $this_IntExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNumberExpressionAccess().getDoubleExpressionParserRuleCall_1());
		}
		this_DoubleExpression_1=ruleDoubleExpression
		{
			$current = $this_DoubleExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNumberExpressionAccess().getFracExpressionParserRuleCall_2());
		}
		this_FracExpression_2=ruleFracExpression
		{
			$current = $this_FracExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNumberExpressionAccess().getCompExpressionParserRuleCall_3());
		}
		this_CompExpression_3=ruleCompExpression
		{
			$current = $this_CompExpression_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNumberExpressionAccess().getArithExpressionParserRuleCall_4());
		}
		this_ArithExpression_4=ruleArithExpression
		{
			$current = $this_ArithExpression_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIntExpression
entryRuleIntExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntExpressionRule()); }
	iv_ruleIntExpression=ruleIntExpression
	{ $current=$iv_ruleIntExpression.current; }
	EOF;

// Rule IntExpression
ruleIntExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getIntExpressionAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIntExpressionRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleDoubleExpression
entryRuleDoubleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDoubleExpressionRule()); }
	iv_ruleDoubleExpression=ruleDoubleExpression
	{ $current=$iv_ruleDoubleExpression.current; }
	EOF;

// Rule DoubleExpression
ruleDoubleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getDoubleExpressionAccess().getLeftParenthesisKeyword_0());
		}
		otherlv_1='double'
		{
			newLeafNode(otherlv_1, grammarAccess.getDoubleExpressionAccess().getDoubleKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getDoubleExpressionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				lv_int_3_0=RULE_INT
				{
					newLeafNode(lv_int_3_0, grammarAccess.getDoubleExpressionAccess().getIntINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDoubleExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"int",
						lv_int_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				lv_dec_4_0=RULE_INT
				{
					newLeafNode(lv_dec_4_0, grammarAccess.getDoubleExpressionAccess().getDecINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDoubleExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"dec",
						lv_dec_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getDoubleExpressionAccess().getRightParenthesisKeyword_5());
		}
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getDoubleExpressionAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleFracExpression
entryRuleFracExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFracExpressionRule()); }
	iv_ruleFracExpression=ruleFracExpression
	{ $current=$iv_ruleFracExpression.current; }
	EOF;

// Rule FracExpression
ruleFracExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getFracExpressionAccess().getLeftParenthesisKeyword_0());
		}
		otherlv_1='fraction'
		{
			newLeafNode(otherlv_1, grammarAccess.getFracExpressionAccess().getFractionKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getFracExpressionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				lv_num_3_0=RULE_INT
				{
					newLeafNode(lv_num_3_0, grammarAccess.getFracExpressionAccess().getNumINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFracExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"num",
						lv_num_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				lv_dec_4_0=RULE_INT
				{
					newLeafNode(lv_dec_4_0, grammarAccess.getFracExpressionAccess().getDecINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFracExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"dec",
						lv_dec_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getFracExpressionAccess().getRightParenthesisKeyword_5());
		}
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getFracExpressionAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleCompExpression
entryRuleCompExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompExpressionRule()); }
	iv_ruleCompExpression=ruleCompExpression
	{ $current=$iv_ruleCompExpression.current; }
	EOF;

// Rule CompExpression
ruleCompExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getCompExpressionAccess().getLeftParenthesisKeyword_0());
		}
		otherlv_1='complex'
		{
			newLeafNode(otherlv_1, grammarAccess.getCompExpressionAccess().getComplexKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getCompExpressionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				lv_real_3_0=RULE_INT
				{
					newLeafNode(lv_real_3_0, grammarAccess.getCompExpressionAccess().getRealINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"real",
						lv_real_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				lv_imag_4_0=RULE_INT
				{
					newLeafNode(lv_imag_4_0, grammarAccess.getCompExpressionAccess().getImagINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompExpressionRule());
					}
					setWithLastConsumed(
						$current,
						"imag",
						lv_imag_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getCompExpressionAccess().getRightParenthesisKeyword_5());
		}
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getCompExpressionAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleBoolExpression
entryRuleBoolExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoolExpressionRule()); }
	iv_ruleBoolExpression=ruleBoolExpression
	{ $current=$iv_ruleBoolExpression.current; }
	EOF;

// Rule BoolExpression
ruleBoolExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBoolExpressionAccess().getBoolConstantParserRuleCall_0());
		}
		this_BoolConstant_0=ruleBoolConstant
		{
			$current = $this_BoolConstant_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBoolExpressionAccess().getBoolNumCompExpressionParserRuleCall_1());
		}
		this_BoolNumCompExpression_1=ruleBoolNumCompExpression
		{
			$current = $this_BoolNumCompExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBoolExpressionAccess().getBoolCompExpressionParserRuleCall_2());
		}
		this_BoolCompExpression_2=ruleBoolCompExpression
		{
			$current = $this_BoolCompExpression_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBoolConstant
entryRuleBoolConstant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoolConstantRule()); }
	iv_ruleBoolConstant=ruleBoolConstant
	{ $current=$iv_ruleBoolConstant.current; }
	EOF;

// Rule BoolConstant
ruleBoolConstant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0='#t'
				{
					newLeafNode(lv_value_0_0, grammarAccess.getBoolConstantAccess().getValueTKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBoolConstantRule());
					}
					setWithLastConsumed($current, "value", true, "#t");
				}
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getBoolConstantAccess().getBoolConstantAction_1_0(),
						$current);
				}
			)
			otherlv_2='#f'
			{
				newLeafNode(otherlv_2, grammarAccess.getBoolConstantAccess().getFKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleBoolNumCompExpression
entryRuleBoolNumCompExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoolNumCompExpressionRule()); }
	iv_ruleBoolNumCompExpression=ruleBoolNumCompExpression
	{ $current=$iv_ruleBoolNumCompExpression.current; }
	EOF;

// Rule BoolNumCompExpression
ruleBoolNumCompExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getBoolNumCompExpressionAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				(
					lv_comp_1_1='<'
					{
						newLeafNode(lv_comp_1_1, grammarAccess.getBoolNumCompExpressionAccess().getCompLessThanSignKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBoolNumCompExpressionRule());
						}
						setWithLastConsumed($current, "comp", lv_comp_1_1, null);
					}
					    |
					lv_comp_1_2='>'
					{
						newLeafNode(lv_comp_1_2, grammarAccess.getBoolNumCompExpressionAccess().getCompGreaterThanSignKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBoolNumCompExpressionRule());
						}
						setWithLastConsumed($current, "comp", lv_comp_1_2, null);
					}
					    |
					lv_comp_1_3='='
					{
						newLeafNode(lv_comp_1_3, grammarAccess.getBoolNumCompExpressionAccess().getCompEqualsSignKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBoolNumCompExpressionRule());
						}
						setWithLastConsumed($current, "comp", lv_comp_1_3, null);
					}
					    |
					lv_comp_1_4='<='
					{
						newLeafNode(lv_comp_1_4, grammarAccess.getBoolNumCompExpressionAccess().getCompLessThanSignEqualsSignKeyword_1_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBoolNumCompExpressionRule());
						}
						setWithLastConsumed($current, "comp", lv_comp_1_4, null);
					}
					    |
					lv_comp_1_5='>='
					{
						newLeafNode(lv_comp_1_5, grammarAccess.getBoolNumCompExpressionAccess().getCompGreaterThanSignEqualsSignKeyword_1_0_4());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBoolNumCompExpressionRule());
						}
						setWithLastConsumed($current, "comp", lv_comp_1_5, null);
					}
				)
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBoolNumCompExpressionAccess().getE1NumberExpressionParserRuleCall_2_0_0());
					}
					lv_e1_2_1=ruleNumberExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBoolNumCompExpressionRule());
						}
						set(
							$current,
							"e1",
							lv_e1_2_1,
							"edu.upb.lp.isc.LosCheetos.NumberExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getBoolNumCompExpressionAccess().getE1ParamCallExpressionParserRuleCall_2_0_1());
					}
					lv_e1_2_2=ruleParamCallExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBoolNumCompExpressionRule());
						}
						set(
							$current,
							"e1",
							lv_e1_2_2,
							"edu.upb.lp.isc.LosCheetos.ParamCallExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getBoolNumCompExpressionAccess().getE1FunctionCallExpressionParserRuleCall_2_0_2());
					}
					lv_e1_2_3=ruleFunctionCallExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBoolNumCompExpressionRule());
						}
						set(
							$current,
							"e1",
							lv_e1_2_3,
							"edu.upb.lp.isc.LosCheetos.FunctionCallExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBoolNumCompExpressionAccess().getE2NumberExpressionParserRuleCall_3_0_0());
					}
					lv_e2_3_1=ruleNumberExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBoolNumCompExpressionRule());
						}
						set(
							$current,
							"e2",
							lv_e2_3_1,
							"edu.upb.lp.isc.LosCheetos.NumberExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getBoolNumCompExpressionAccess().getE2ParamCallExpressionParserRuleCall_3_0_1());
					}
					lv_e2_3_2=ruleParamCallExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBoolNumCompExpressionRule());
						}
						set(
							$current,
							"e2",
							lv_e2_3_2,
							"edu.upb.lp.isc.LosCheetos.ParamCallExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getBoolNumCompExpressionAccess().getE2FunctionCallExpressionParserRuleCall_3_0_2());
					}
					lv_e2_3_3=ruleFunctionCallExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBoolNumCompExpressionRule());
						}
						set(
							$current,
							"e2",
							lv_e2_3_3,
							"edu.upb.lp.isc.LosCheetos.FunctionCallExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getBoolNumCompExpressionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleBoolCompExpression
entryRuleBoolCompExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoolCompExpressionRule()); }
	iv_ruleBoolCompExpression=ruleBoolCompExpression
	{ $current=$iv_ruleBoolCompExpression.current; }
	EOF;

// Rule BoolCompExpression
ruleBoolCompExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getBoolCompExpressionAccess().getLeftParenthesisKeyword_0());
		}
		(
			otherlv_1='eq?'
			{
				newLeafNode(otherlv_1, grammarAccess.getBoolCompExpressionAccess().getEqKeyword_1_0());
			}
			    |
			otherlv_2='equal?'
			{
				newLeafNode(otherlv_2, grammarAccess.getBoolCompExpressionAccess().getEqualKeyword_1_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBoolCompExpressionAccess().getE1ExpressionParserRuleCall_2_0());
				}
				lv_e1_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBoolCompExpressionRule());
					}
					set(
						$current,
						"e1",
						lv_e1_3_0,
						"edu.upb.lp.isc.LosCheetos.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBoolCompExpressionAccess().getE2ExpressionParserRuleCall_3_0());
				}
				lv_e2_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBoolCompExpressionRule());
					}
					set(
						$current,
						"e2",
						lv_e2_4_0,
						"edu.upb.lp.isc.LosCheetos.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getBoolCompExpressionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleStrExpression
entryRuleStrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStrExpressionRule()); }
	iv_ruleStrExpression=ruleStrExpression
	{ $current=$iv_ruleStrExpression.current; }
	EOF;

// Rule StrExpression
ruleStrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING
			{
				newLeafNode(lv_value_0_0, grammarAccess.getStrExpressionAccess().getValueSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStrExpressionRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleListExpression
entryRuleListExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListExpressionRule()); }
	iv_ruleListExpression=ruleListExpression
	{ $current=$iv_ruleListExpression.current; }
	EOF;

// Rule ListExpression
ruleListExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getListExpressionAccess().getListExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getListExpressionAccess().getLeftParenthesisKeyword_1());
		}
		otherlv_2='list'
		{
			newLeafNode(otherlv_2, grammarAccess.getListExpressionAccess().getListKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getListExpressionAccess().getArgsExpressionParserRuleCall_3_0());
				}
				lv_args_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListExpressionRule());
					}
					add(
						$current,
						"args",
						lv_args_3_0,
						"edu.upb.lp.isc.LosCheetos.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getListExpressionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRulePrintExpression
entryRulePrintExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrintExpressionRule()); }
	iv_rulePrintExpression=rulePrintExpression
	{ $current=$iv_rulePrintExpression.current; }
	EOF;

// Rule PrintExpression
rulePrintExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getPrintExpressionAccess().getLeftParenthesisKeyword_0());
		}
		otherlv_1='print'
		{
			newLeafNode(otherlv_1, grammarAccess.getPrintExpressionAccess().getPrintKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPrintExpressionAccess().getExprExpressionParserRuleCall_2_0());
				}
				lv_expr_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrintExpressionRule());
					}
					set(
						$current,
						"expr",
						lv_expr_2_0,
						"edu.upb.lp.isc.LosCheetos.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getPrintExpressionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleListOpExpression
entryRuleListOpExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListOpExpressionRule()); }
	iv_ruleListOpExpression=ruleListOpExpression
	{ $current=$iv_ruleListOpExpression.current; }
	EOF;

// Rule ListOpExpression
ruleListOpExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getListOpExpressionAccess().getCarExpressionParserRuleCall_0());
		}
		this_CarExpression_0=ruleCarExpression
		{
			$current = $this_CarExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getListOpExpressionAccess().getCdrExpressionParserRuleCall_1());
		}
		this_CdrExpression_1=ruleCdrExpression
		{
			$current = $this_CdrExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getListOpExpressionAccess().getLengthExpressionParserRuleCall_2());
		}
		this_LengthExpression_2=ruleLengthExpression
		{
			$current = $this_LengthExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getListOpExpressionAccess().getEmptyExpressionParserRuleCall_3());
		}
		this_EmptyExpression_3=ruleEmptyExpression
		{
			$current = $this_EmptyExpression_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getListOpExpressionAccess().getConsExpressionParserRuleCall_4());
		}
		this_ConsExpression_4=ruleConsExpression
		{
			$current = $this_ConsExpression_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCarExpression
entryRuleCarExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCarExpressionRule()); }
	iv_ruleCarExpression=ruleCarExpression
	{ $current=$iv_ruleCarExpression.current; }
	EOF;

// Rule CarExpression
ruleCarExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getCarExpressionAccess().getLeftParenthesisKeyword_0());
		}
		otherlv_1='car'
		{
			newLeafNode(otherlv_1, grammarAccess.getCarExpressionAccess().getCarKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCarExpressionAccess().getListListExpressionParserRuleCall_2_0_0());
					}
					lv_list_2_1=ruleListExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCarExpressionRule());
						}
						set(
							$current,
							"list",
							lv_list_2_1,
							"edu.upb.lp.isc.LosCheetos.ListExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getCarExpressionAccess().getListCdrExpressionParserRuleCall_2_0_1());
					}
					lv_list_2_2=ruleCdrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCarExpressionRule());
						}
						set(
							$current,
							"list",
							lv_list_2_2,
							"edu.upb.lp.isc.LosCheetos.CdrExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getCarExpressionAccess().getListParamCallExpressionParserRuleCall_2_0_2());
					}
					lv_list_2_3=ruleParamCallExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCarExpressionRule());
						}
						set(
							$current,
							"list",
							lv_list_2_3,
							"edu.upb.lp.isc.LosCheetos.ParamCallExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getCarExpressionAccess().getListFunctionCallExpressionParserRuleCall_2_0_3());
					}
					lv_list_2_4=ruleFunctionCallExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCarExpressionRule());
						}
						set(
							$current,
							"list",
							lv_list_2_4,
							"edu.upb.lp.isc.LosCheetos.FunctionCallExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getCarExpressionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleCdrExpression
entryRuleCdrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCdrExpressionRule()); }
	iv_ruleCdrExpression=ruleCdrExpression
	{ $current=$iv_ruleCdrExpression.current; }
	EOF;

// Rule CdrExpression
ruleCdrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getCdrExpressionAccess().getLeftParenthesisKeyword_0());
		}
		otherlv_1='cdr'
		{
			newLeafNode(otherlv_1, grammarAccess.getCdrExpressionAccess().getCdrKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCdrExpressionAccess().getListListExpressionParserRuleCall_2_0_0());
					}
					lv_list_2_1=ruleListExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCdrExpressionRule());
						}
						set(
							$current,
							"list",
							lv_list_2_1,
							"edu.upb.lp.isc.LosCheetos.ListExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getCdrExpressionAccess().getListCdrExpressionParserRuleCall_2_0_1());
					}
					lv_list_2_2=ruleCdrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCdrExpressionRule());
						}
						set(
							$current,
							"list",
							lv_list_2_2,
							"edu.upb.lp.isc.LosCheetos.CdrExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getCdrExpressionAccess().getListParamCallExpressionParserRuleCall_2_0_2());
					}
					lv_list_2_3=ruleParamCallExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCdrExpressionRule());
						}
						set(
							$current,
							"list",
							lv_list_2_3,
							"edu.upb.lp.isc.LosCheetos.ParamCallExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getCdrExpressionAccess().getListFunctionCallExpressionParserRuleCall_2_0_3());
					}
					lv_list_2_4=ruleFunctionCallExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCdrExpressionRule());
						}
						set(
							$current,
							"list",
							lv_list_2_4,
							"edu.upb.lp.isc.LosCheetos.FunctionCallExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getCdrExpressionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleLengthExpression
entryRuleLengthExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLengthExpressionRule()); }
	iv_ruleLengthExpression=ruleLengthExpression
	{ $current=$iv_ruleLengthExpression.current; }
	EOF;

// Rule LengthExpression
ruleLengthExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getLengthExpressionAccess().getLeftParenthesisKeyword_0());
		}
		otherlv_1='length'
		{
			newLeafNode(otherlv_1, grammarAccess.getLengthExpressionAccess().getLengthKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLengthExpressionAccess().getListListExpressionParserRuleCall_2_0_0());
					}
					lv_list_2_1=ruleListExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLengthExpressionRule());
						}
						set(
							$current,
							"list",
							lv_list_2_1,
							"edu.upb.lp.isc.LosCheetos.ListExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getLengthExpressionAccess().getListCdrExpressionParserRuleCall_2_0_1());
					}
					lv_list_2_2=ruleCdrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLengthExpressionRule());
						}
						set(
							$current,
							"list",
							lv_list_2_2,
							"edu.upb.lp.isc.LosCheetos.CdrExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getLengthExpressionAccess().getListParamCallExpressionParserRuleCall_2_0_2());
					}
					lv_list_2_3=ruleParamCallExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLengthExpressionRule());
						}
						set(
							$current,
							"list",
							lv_list_2_3,
							"edu.upb.lp.isc.LosCheetos.ParamCallExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getLengthExpressionAccess().getListConsExpressionParserRuleCall_2_0_3());
					}
					lv_list_2_4=ruleConsExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLengthExpressionRule());
						}
						set(
							$current,
							"list",
							lv_list_2_4,
							"edu.upb.lp.isc.LosCheetos.ConsExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getLengthExpressionAccess().getListFunctionCallExpressionParserRuleCall_2_0_4());
					}
					lv_list_2_5=ruleFunctionCallExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLengthExpressionRule());
						}
						set(
							$current,
							"list",
							lv_list_2_5,
							"edu.upb.lp.isc.LosCheetos.FunctionCallExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getLengthExpressionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleEmptyExpression
entryRuleEmptyExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmptyExpressionRule()); }
	iv_ruleEmptyExpression=ruleEmptyExpression
	{ $current=$iv_ruleEmptyExpression.current; }
	EOF;

// Rule EmptyExpression
ruleEmptyExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getEmptyExpressionAccess().getLeftParenthesisKeyword_0());
		}
		otherlv_1='empty?'
		{
			newLeafNode(otherlv_1, grammarAccess.getEmptyExpressionAccess().getEmptyKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEmptyExpressionAccess().getListListExpressionParserRuleCall_2_0_0());
					}
					lv_list_2_1=ruleListExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEmptyExpressionRule());
						}
						set(
							$current,
							"list",
							lv_list_2_1,
							"edu.upb.lp.isc.LosCheetos.ListExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getEmptyExpressionAccess().getListListOpExpressionParserRuleCall_2_0_1());
					}
					lv_list_2_2=ruleListOpExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEmptyExpressionRule());
						}
						set(
							$current,
							"list",
							lv_list_2_2,
							"edu.upb.lp.isc.LosCheetos.ListOpExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getEmptyExpressionAccess().getListFunctionCallExpressionParserRuleCall_2_0_2());
					}
					lv_list_2_3=ruleFunctionCallExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEmptyExpressionRule());
						}
						set(
							$current,
							"list",
							lv_list_2_3,
							"edu.upb.lp.isc.LosCheetos.FunctionCallExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getEmptyExpressionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleConsExpression
entryRuleConsExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConsExpressionRule()); }
	iv_ruleConsExpression=ruleConsExpression
	{ $current=$iv_ruleConsExpression.current; }
	EOF;

// Rule ConsExpression
ruleConsExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getConsExpressionAccess().getLeftParenthesisKeyword_0());
		}
		otherlv_1='cons'
		{
			newLeafNode(otherlv_1, grammarAccess.getConsExpressionAccess().getConsKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConsExpressionAccess().getExprExpressionParserRuleCall_2_0());
				}
				lv_expr_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConsExpressionRule());
					}
					set(
						$current,
						"expr",
						lv_expr_2_0,
						"edu.upb.lp.isc.LosCheetos.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConsExpressionAccess().getListListExpressionParserRuleCall_3_0());
				}
				lv_list_3_0=ruleListExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConsExpressionRule());
					}
					set(
						$current,
						"list",
						lv_list_3_0,
						"edu.upb.lp.isc.LosCheetos.ListExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getConsExpressionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleStrOpExpression
entryRuleStrOpExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStrOpExpressionRule()); }
	iv_ruleStrOpExpression=ruleStrOpExpression
	{ $current=$iv_ruleStrOpExpression.current; }
	EOF;

// Rule StrOpExpression
ruleStrOpExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStrOpExpressionAccess().getStrLenExpressionParserRuleCall_0());
		}
		this_StrLenExpression_0=ruleStrLenExpression
		{
			$current = $this_StrLenExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStrOpExpressionAccess().getStrAppExpressionParserRuleCall_1());
		}
		this_StrAppExpression_1=ruleStrAppExpression
		{
			$current = $this_StrAppExpression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStrLenExpression
entryRuleStrLenExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStrLenExpressionRule()); }
	iv_ruleStrLenExpression=ruleStrLenExpression
	{ $current=$iv_ruleStrLenExpression.current; }
	EOF;

// Rule StrLenExpression
ruleStrLenExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getStrLenExpressionAccess().getLeftParenthesisKeyword_0());
		}
		otherlv_1='string-length'
		{
			newLeafNode(otherlv_1, grammarAccess.getStrLenExpressionAccess().getStringLengthKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStrLenExpressionAccess().getStrStrExpressionParserRuleCall_2_0());
				}
				lv_str_2_0=ruleStrExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStrLenExpressionRule());
					}
					set(
						$current,
						"str",
						lv_str_2_0,
						"edu.upb.lp.isc.LosCheetos.StrExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getStrLenExpressionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleStrAppExpression
entryRuleStrAppExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStrAppExpressionRule()); }
	iv_ruleStrAppExpression=ruleStrAppExpression
	{ $current=$iv_ruleStrAppExpression.current; }
	EOF;

// Rule StrAppExpression
ruleStrAppExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getStrAppExpressionAccess().getLeftParenthesisKeyword_0());
		}
		otherlv_1='string-append'
		{
			newLeafNode(otherlv_1, grammarAccess.getStrAppExpressionAccess().getStringAppendKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStrAppExpressionAccess().getStr1StrExpressionParserRuleCall_2_0_0());
					}
					lv_str1_2_1=ruleStrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStrAppExpressionRule());
						}
						set(
							$current,
							"str1",
							lv_str1_2_1,
							"edu.upb.lp.isc.LosCheetos.StrExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getStrAppExpressionAccess().getStr1ParamCallExpressionParserRuleCall_2_0_1());
					}
					lv_str1_2_2=ruleParamCallExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStrAppExpressionRule());
						}
						set(
							$current,
							"str1",
							lv_str1_2_2,
							"edu.upb.lp.isc.LosCheetos.ParamCallExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getStrAppExpressionAccess().getStr1FunctionCallExpressionParserRuleCall_2_0_2());
					}
					lv_str1_2_3=ruleFunctionCallExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStrAppExpressionRule());
						}
						set(
							$current,
							"str1",
							lv_str1_2_3,
							"edu.upb.lp.isc.LosCheetos.FunctionCallExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStrAppExpressionAccess().getStr2StrExpressionParserRuleCall_3_0_0());
					}
					lv_str2_3_1=ruleStrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStrAppExpressionRule());
						}
						set(
							$current,
							"str2",
							lv_str2_3_1,
							"edu.upb.lp.isc.LosCheetos.StrExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getStrAppExpressionAccess().getStr2ParamCallExpressionParserRuleCall_3_0_1());
					}
					lv_str2_3_2=ruleParamCallExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStrAppExpressionRule());
						}
						set(
							$current,
							"str2",
							lv_str2_3_2,
							"edu.upb.lp.isc.LosCheetos.ParamCallExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getStrAppExpressionAccess().getStr2FunctionCallExpressionParserRuleCall_3_0_2());
					}
					lv_str2_3_3=ruleFunctionCallExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStrAppExpressionRule());
						}
						set(
							$current,
							"str2",
							lv_str2_3_3,
							"edu.upb.lp.isc.LosCheetos.FunctionCallExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getStrAppExpressionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleParamCallExpression
entryRuleParamCallExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParamCallExpressionRule()); }
	iv_ruleParamCallExpression=ruleParamCallExpression
	{ $current=$iv_ruleParamCallExpression.current; }
	EOF;

// Rule ParamCallExpression
ruleParamCallExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_param_0_0=RULE_ID
			{
				newLeafNode(lv_param_0_0, grammarAccess.getParamCallExpressionAccess().getParamIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getParamCallExpressionRule());
				}
				setWithLastConsumed(
					$current,
					"param",
					lv_param_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleArithExpression
entryRuleArithExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithExpressionRule()); }
	iv_ruleArithExpression=ruleArithExpression
	{ $current=$iv_ruleArithExpression.current; }
	EOF;

// Rule ArithExpression
ruleArithExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getArithExpressionAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				(
					lv_op_1_1='+'
					{
						newLeafNode(lv_op_1_1, grammarAccess.getArithExpressionAccess().getOpPlusSignKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getArithExpressionRule());
						}
						setWithLastConsumed($current, "op", lv_op_1_1, null);
					}
					    |
					lv_op_1_2='-'
					{
						newLeafNode(lv_op_1_2, grammarAccess.getArithExpressionAccess().getOpHyphenMinusKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getArithExpressionRule());
						}
						setWithLastConsumed($current, "op", lv_op_1_2, null);
					}
					    |
					lv_op_1_3='*'
					{
						newLeafNode(lv_op_1_3, grammarAccess.getArithExpressionAccess().getOpAsteriskKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getArithExpressionRule());
						}
						setWithLastConsumed($current, "op", lv_op_1_3, null);
					}
					    |
					lv_op_1_4='/'
					{
						newLeafNode(lv_op_1_4, grammarAccess.getArithExpressionAccess().getOpSolidusKeyword_1_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getArithExpressionRule());
						}
						setWithLastConsumed($current, "op", lv_op_1_4, null);
					}
				)
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getArithExpressionAccess().getArg1NumberExpressionParserRuleCall_2_0_0());
					}
					lv_arg1_2_1=ruleNumberExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArithExpressionRule());
						}
						set(
							$current,
							"arg1",
							lv_arg1_2_1,
							"edu.upb.lp.isc.LosCheetos.NumberExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getArithExpressionAccess().getArg1ParamCallExpressionParserRuleCall_2_0_1());
					}
					lv_arg1_2_2=ruleParamCallExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArithExpressionRule());
						}
						set(
							$current,
							"arg1",
							lv_arg1_2_2,
							"edu.upb.lp.isc.LosCheetos.ParamCallExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getArithExpressionAccess().getArg1FunctionCallExpressionParserRuleCall_2_0_2());
					}
					lv_arg1_2_3=ruleFunctionCallExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArithExpressionRule());
						}
						set(
							$current,
							"arg1",
							lv_arg1_2_3,
							"edu.upb.lp.isc.LosCheetos.FunctionCallExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getArithExpressionAccess().getOargsNumberExpressionParserRuleCall_3_0_0());
					}
					lv_oargs_3_1=ruleNumberExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArithExpressionRule());
						}
						add(
							$current,
							"oargs",
							lv_oargs_3_1,
							"edu.upb.lp.isc.LosCheetos.NumberExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getArithExpressionAccess().getOargsParamCallExpressionParserRuleCall_3_0_1());
					}
					lv_oargs_3_2=ruleParamCallExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArithExpressionRule());
						}
						add(
							$current,
							"oargs",
							lv_oargs_3_2,
							"edu.upb.lp.isc.LosCheetos.ParamCallExpression");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getArithExpressionAccess().getOargsFunctionCallExpressionParserRuleCall_3_0_2());
					}
					lv_oargs_3_3=ruleFunctionCallExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArithExpressionRule());
						}
						add(
							$current,
							"oargs",
							lv_oargs_3_3,
							"edu.upb.lp.isc.LosCheetos.FunctionCallExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getArithExpressionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleIfExpression
entryRuleIfExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfExpressionRule()); }
	iv_ruleIfExpression=ruleIfExpression
	{ $current=$iv_ruleIfExpression.current; }
	EOF;

// Rule IfExpression
ruleIfExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getIfExpressionAccess().getLeftParenthesisKeyword_0());
		}
		otherlv_1='if'
		{
			newLeafNode(otherlv_1, grammarAccess.getIfExpressionAccess().getIfKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfExpressionAccess().getCondBoolExpressionParserRuleCall_2_0());
				}
				lv_cond_2_0=ruleBoolExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfExpressionRule());
					}
					set(
						$current,
						"cond",
						lv_cond_2_0,
						"edu.upb.lp.isc.LosCheetos.BoolExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIfExpressionAccess().getThenExpressionParserRuleCall_3_0());
				}
				lv_then_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfExpressionRule());
					}
					set(
						$current,
						"then",
						lv_then_3_0,
						"edu.upb.lp.isc.LosCheetos.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIfExpressionAccess().getElseExpressionParserRuleCall_4_0());
				}
				lv_else_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfExpressionRule());
					}
					set(
						$current,
						"else",
						lv_else_4_0,
						"edu.upb.lp.isc.LosCheetos.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getIfExpressionAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleFunctionCallExpression
entryRuleFunctionCallExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionCallExpressionRule()); }
	iv_ruleFunctionCallExpression=ruleFunctionCallExpression
	{ $current=$iv_ruleFunctionCallExpression.current; }
	EOF;

// Rule FunctionCallExpression
ruleFunctionCallExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionCallExpressionAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionCallExpressionRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getFunctionCallExpressionAccess().getFunctionDefineCrossReference_1_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionCallExpressionAccess().getArgsExpressionParserRuleCall_2_0());
				}
				lv_args_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionCallExpressionRule());
					}
					add(
						$current,
						"args",
						lv_args_2_0,
						"edu.upb.lp.isc.LosCheetos.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getFunctionCallExpressionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleWhileExpression
entryRuleWhileExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhileExpressionRule()); }
	iv_ruleWhileExpression=ruleWhileExpression
	{ $current=$iv_ruleWhileExpression.current; }
	EOF;

// Rule WhileExpression
ruleWhileExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getWhileExpressionAccess().getLeftParenthesisKeyword_0());
		}
		otherlv_1='while'
		{
			newLeafNode(otherlv_1, grammarAccess.getWhileExpressionAccess().getWhileKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileExpressionAccess().getCondBoolExpressionParserRuleCall_2_0());
				}
				lv_cond_2_0=ruleBoolExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileExpressionRule());
					}
					set(
						$current,
						"cond",
						lv_cond_2_0,
						"edu.upb.lp.isc.LosCheetos.BoolExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileExpressionAccess().getDoExpressionParserRuleCall_3_0());
				}
				lv_do_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileExpressionRule());
					}
					add(
						$current,
						"do",
						lv_do_3_0,
						"edu.upb.lp.isc.LosCheetos.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getWhileExpressionAccess().getRightParenthesisKeyword_4());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
