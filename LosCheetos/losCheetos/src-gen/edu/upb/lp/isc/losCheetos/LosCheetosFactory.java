/**
 * generated by Xtext 2.11.0
 */
package edu.upb.lp.isc.losCheetos;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see edu.upb.lp.isc.losCheetos.LosCheetosPackage
 * @generated
 */
public interface LosCheetosFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  LosCheetosFactory eINSTANCE = edu.upb.lp.isc.losCheetos.impl.LosCheetosFactoryImpl.init();

  /**
   * Returns a new object of class '<em>My Racket Program</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>My Racket Program</em>'.
   * @generated
   */
  MyRacketProgram createMyRacketProgram();

  /**
   * Returns a new object of class '<em>Define</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Define</em>'.
   * @generated
   */
  Define createDefine();

  /**
   * Returns a new object of class '<em>Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression</em>'.
   * @generated
   */
  Expression createExpression();

  /**
   * Returns a new object of class '<em>Simple Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Simple Expression</em>'.
   * @generated
   */
  SimpleExpression createSimpleExpression();

  /**
   * Returns a new object of class '<em>Number Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Number Expression</em>'.
   * @generated
   */
  NumberExpression createNumberExpression();

  /**
   * Returns a new object of class '<em>Int Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Int Expression</em>'.
   * @generated
   */
  IntExpression createIntExpression();

  /**
   * Returns a new object of class '<em>Double Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Double Expression</em>'.
   * @generated
   */
  DoubleExpression createDoubleExpression();

  /**
   * Returns a new object of class '<em>Frac Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Frac Expression</em>'.
   * @generated
   */
  FracExpression createFracExpression();

  /**
   * Returns a new object of class '<em>Comp Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Comp Expression</em>'.
   * @generated
   */
  CompExpression createCompExpression();

  /**
   * Returns a new object of class '<em>Bool Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Bool Expression</em>'.
   * @generated
   */
  BoolExpression createBoolExpression();

  /**
   * Returns a new object of class '<em>Bool Constant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Bool Constant</em>'.
   * @generated
   */
  BoolConstant createBoolConstant();

  /**
   * Returns a new object of class '<em>Bool Num Comp Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Bool Num Comp Expression</em>'.
   * @generated
   */
  BoolNumCompExpression createBoolNumCompExpression();

  /**
   * Returns a new object of class '<em>Bool Comp Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Bool Comp Expression</em>'.
   * @generated
   */
  BoolCompExpression createBoolCompExpression();

  /**
   * Returns a new object of class '<em>Str Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Str Expression</em>'.
   * @generated
   */
  StrExpression createStrExpression();

  /**
   * Returns a new object of class '<em>List Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>List Expression</em>'.
   * @generated
   */
  ListExpression createListExpression();

  /**
   * Returns a new object of class '<em>Print Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Print Expression</em>'.
   * @generated
   */
  PrintExpression createPrintExpression();

  /**
   * Returns a new object of class '<em>List Op Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>List Op Expression</em>'.
   * @generated
   */
  ListOpExpression createListOpExpression();

  /**
   * Returns a new object of class '<em>Car Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Car Expression</em>'.
   * @generated
   */
  CarExpression createCarExpression();

  /**
   * Returns a new object of class '<em>Cdr Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Cdr Expression</em>'.
   * @generated
   */
  CdrExpression createCdrExpression();

  /**
   * Returns a new object of class '<em>Length Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Length Expression</em>'.
   * @generated
   */
  LengthExpression createLengthExpression();

  /**
   * Returns a new object of class '<em>Empty Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Empty Expression</em>'.
   * @generated
   */
  EmptyExpression createEmptyExpression();

  /**
   * Returns a new object of class '<em>Cons Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Cons Expression</em>'.
   * @generated
   */
  ConsExpression createConsExpression();

  /**
   * Returns a new object of class '<em>Str Op Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Str Op Expression</em>'.
   * @generated
   */
  StrOpExpression createStrOpExpression();

  /**
   * Returns a new object of class '<em>Str Len Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Str Len Expression</em>'.
   * @generated
   */
  StrLenExpression createStrLenExpression();

  /**
   * Returns a new object of class '<em>Str App Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Str App Expression</em>'.
   * @generated
   */
  StrAppExpression createStrAppExpression();

  /**
   * Returns a new object of class '<em>Param Call Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Param Call Expression</em>'.
   * @generated
   */
  ParamCallExpression createParamCallExpression();

  /**
   * Returns a new object of class '<em>Arith Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Arith Expression</em>'.
   * @generated
   */
  ArithExpression createArithExpression();

  /**
   * Returns a new object of class '<em>If Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>If Expression</em>'.
   * @generated
   */
  IfExpression createIfExpression();

  /**
   * Returns a new object of class '<em>Function Call Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Function Call Expression</em>'.
   * @generated
   */
  FunctionCallExpression createFunctionCallExpression();

  /**
   * Returns a new object of class '<em>While Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>While Expression</em>'.
   * @generated
   */
  WhileExpression createWhileExpression();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  LosCheetosPackage getLosCheetosPackage();

} //LosCheetosFactory
